//file:noinspection all

plugins {
  id 'fabric-loom' version '0.10-SNAPSHOT'
  id 'maven-publish'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
group = project.maven_group

version = System.env.GITHUB_ACTIONS == "true"
        ? "${project.mod_version}+build.${System.env.GITHUB_RUN_NUMBER}"
        : project.mod_version

dependencies {
  minecraft "com.mojang:minecraft:${project.minecraft_version}"
  mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_build}:v2"
  modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
  modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

loom {
  accessWidenerPath = file("src/main/resources/${project.mod_id}.accesswidener")

  runs {
    data {
      server()

      vmArgs(
              "-D${project.mod_id}.datagen=true",
              "-D${project.mod_id}.datagen.path=\"${project.file("src/generated/resources")};${project.file("$buildDir/resources/main")}\""
      )
    }
  }
}

processResources {
  inputs.property "version", project.version
  filesMatching("fabric.mod.json") { expand "version": project.version }
}

sourceSets.main.resources { srcDirs += "$projectDir/src/generated/resources" }

tasks.withType(JavaCompile).configureEach { it.options.release = 17 }
java { withSourcesJar() }

jar {
  from("LICENSE") { rename { "${it}_${archivesBaseName}"} }
}

publishing {
  publications {
    mavenJava(MavenPublication) { from components.java }
  }
}
